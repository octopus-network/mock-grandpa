[global]
# strategy = 'all'
# filter = false
log_level = 'debug'
# clear_packets_interval = 100
# tx_confirmation = true

# # Specify the mode to be used by the relayer. [Required]
# [mode]
# # Specify the client mode
# [mode.clients]
# # Whether or not to enable the client workers. [Required]
# enabled = true
# # Whether or not to enable periodic refresh of clients. [Default: true]
# # Note: Even if this is disabled, clients will be refreshed automatically if
# #      there is activity on a connection or channel they are involved with.
# refresh = true
# # Whether or not to enable misbehaviour detection for clients. [Default: false]
# misbehaviour = true

# # Specify the connections mode.
# [mode.connections]
# # Whether or not to enable the connection workers for handshake completion. [Required]
# enabled = true

# # Specify the channels mode.
# [mode.channels]
# # Whether or not to enable the channel workers for handshake completion. [Required]
# enabled = true

# # Specify the packets mode.
# [mode.packets]
# # Whether or not to enable the packet workers. [Required]
# enabled = true
# # Parametrize the periodic packet clearing feature.
# # Interval (in number of blocks) at which pending packets
# # should be eagerly cleared. A value of '0' will disable
# # periodic packet clearing. [Default: 100]
# clear_interval = 100
# # Whether or not to clear packets on start. [Default: false]
# clear_on_start = true
# # Enable or disable the filtering mechanism.
# # Valid options are 'true', 'false'.
# # Currently Hermes supports two filters:
# # 1. Packet filtering on a per-chain basis; see the chain-specific
# #   filter specification below in [chains.packet_filter].
# # 2. Filter for all activities based on client state trust threshold; this filter
# #   is parametrized with (numerator = 1, denominator = 3), so that clients with
# #   thresholds different than this will be ignored.
# # If set to 'true', both of the above filters will be enabled.
# # [Default: false]
# filter = false
# # Toggle the transaction confirmation mechanism.
# # The tx confirmation mechanism periodically queries the `/tx_search` RPC
# # endpoint to check that previously-submitted transactions
# # (to any chain in this config file) have delivered successfully.
# # Experimental feature. Affects telemetry if set to false.
# # [Default: true]
# tx_confirmation = true

[rest]
enabled = true
host = '0.0.0.0'
port = 3000

[telemetry]
enabled = true
host = '0.0.0.0'
port = 3001

[[chains]]
id = 'earth'
rpc_addr = 'http://127.0.0.1:26657'
grpc_addr = 'http://127.0.0.1:9095'
websocket_addr = 'ws://127.0.0.1:26657/websocket'
account_prefix = 'cosmos'
address_type = { derivation = 'cosmos' }
key_name = 'alice'
store_prefix = 'ibc'
max_gas = 3000000
gas_price = { price = 0.001, denom = 'stake' }
gas_adjustment = 0.1
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }


[[chains]]
id = 'mars'
rpc_addr = 'http://127.0.0.1:26658'
grpc_addr = 'http://127.0.0.1:9097'
websocket_addr = 'ws://127.0.0.1:26658/websocket'
rpc_timeout = '10s'
account_prefix = 'cosmos'
address_type = { derivation = 'cosmos' }
key_name = 'bob'
store_prefix = 'ibc'
max_gas = 3000000
gas_price = { price = 0.001, denom = 'stake' }
gas_adjustment = 0.1
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }

[[chains]]
id = 'kepler22d'
rpc_addr = 'http://127.0.0.1:9944'
grpc_addr = 'http://127.0.0.1:9090'
websocket_addr = 'ws://127.0.0.1:9944/websocket'
rpc_timeout = '10s'
account_prefix = 'substrate'
key_name = 'testkey'
address_type = { derivation = 'cosmos' }
store_prefix = 'ibc'
max_gas = 3000000
gas_price = { price = 0.001, denom = 'stake' }
gas_adjustment = 0.1
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }

[[chains]]
id = 'kepler69c'
rpc_addr = 'http://127.0.0.1:8844'
grpc_addr = 'http://127.0.0.1:9091'
# subscribe subtstrate client
websocket_addr = 'ws://127.0.0.1:8844/websocket'
rpc_timeout = '10s'
account_prefix = 'substrate'
key_name = 'testkey'
store_prefix = 'ibc'
max_gas = 3000000
gas_price = { price = 0.001, denom = 'stake' }
gas_adjustment = 0.1
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }



# [[chains]]
# id = 'astar-0'
# rpc_addr = 'http://127.0.0.1:9944'
# grpc_addr = 'http://127.0.0.1:9090'
# websocket_addr = 'ws://127.0.0.1:9944/websocket'
# rpc_timeout = '10s'
# account_prefix = 'substrate'
# key_name = 'testkey'
# address_type = { derivation = 'cosmos' }
# store_prefix = 'ibc'
# max_gas = 3000000
# gas_price = { price = 0.001, denom = 'stake' }
# gas_adjustment = 0.1
# max_msg_num = 30
# max_tx_size = 2097152
# clock_drift = '5s'
# trusting_period = '14days'
# trust_threshold = { numerator = '1', denominator = '3' }


# [[chains]]
# id = 'astar-1'
# rpc_addr = 'http://127.0.0.1:8844'
# grpc_addr = 'http://127.0.0.1:9091'
# # subscribe subtstrate client
# websocket_addr = 'ws://127.0.0.1:8844/websocket'
# rpc_timeout = '10s'
# account_prefix = 'substrate'
# key_name = 'testkey'
# store_prefix = 'ibc'
# max_gas = 3000000
# gas_price = { price = 0.001, denom = 'stake' }
# gas_adjustment = 0.1
# max_msg_num = 30
# max_tx_size = 2097152
# clock_drift = '5s'
# trusting_period = '14days'
# trust_threshold = { numerator = '1', denominator = '3' }
# address_type = { derivation = 'cosmos' }
